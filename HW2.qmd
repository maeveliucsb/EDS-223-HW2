---
title: "HW2"
format: html
editor: visual
---

## Preamble

```{r}
#Library Loading
library(sf)
library(here)
library(tidyverse)
library(tmap)
library(viridis)
library(scales)

#data loading
ejscreen <- st_read(here("data", "ejscreen", "EJSCREEN_2023_BG_StatePct_with_AS_CNMI_GU_VI.gdb"))
HOLC <- st_read(here("data", "mapping-inequality", "mapping-inequality-los-angeles.json"))
BDobs <- st_read(here("data", "gbif-birds-LA", "gbif-birds-LA.shp"))
```

# Part 1: Legacy of redlining in current environmental (in)justice

#### Create a map of historical redlining neighborhoods

-   neighborhoods colored by HOLC grade
-   an appropriate base map
-   a clear title and legend

```{r}
tm_shape(HOLC) +
  tm_polygons(
    fill = "grade",
    fill.legend = tm_legend(title = "Grade of neighborhoods in LA")
  ) +
    tm_borders(col = "black") +
  tm_title_out("Redlining in Los Angeles")
```

#### Create a table summarizing

-   The percentage of census block groups that fall within each HOLC grade
-   Also include the percent of census block groups that don’t fall within a HOLC grade

```{r}
percenttable <- HOLC |>
  st_drop_geometry() |>
  dplyr::count(grade, name = "n_blocks") |>
  dplyr::mutate(pct_blocks = 100 * n_blocks / sum(n_blocks))
view(percenttable)
```

#### Create at least two visualizations summarizing current conditions (from the EJScreen data) within HOLC grades using the mean of the following variables (you may combine variables or create separate plots):

-   % low income
-   Percentile for Particulate Matter 2.5
-   percentile for low life expectancy
-   Use ggplot for your visualizations! You will first need to calculate mean of each variable grouped by HOLC grade.

####Plot 1

```{r}
EJLA <- ejscreen %>% filter(CNTY_NAME == 'Los Angeles County') #filtering for just Los Angeles

#making geometries valid
HOLC <- st_make_valid(HOLC)
EJLA <- st_make_valid(EJLA)
#aligning CRSs without overwriting
if (st_crs(HOLC) != st_crs(EJLA)) {
  HOLC <- st_transform(HOLC, st_crs(EJLA))
}
#drop the block groups onto the HOLC map; each block group gets the grade of the HOLC polygon it lands in.
EJLA_HOLC <- st_join(EJLA, HOLC["grade"], join = st_intersects)

#finding the means 
means_by_grade <- EJLA_HOLC |>
  st_drop_geometry() |>
  group_by(grade) |>
  summarise(
    mean_low_income_pct        = mean(LOWINCPCT,   na.rm = TRUE),
    mean_pm25_percentile       = mean(PM25,     na.rm = TRUE),
    mean_lifeexp_percentile    = mean(LIFEEXPPCT,  na.rm = TRUE),
    .groups = "drop"
  )
#visualization 1
ggplot(means_by_grade, aes(x = grade, y = mean_low_income_pct)) +
  geom_col() +
  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +
  labs(
    title = "% Low Income by HOLC Grade (LA County)",
    x = "HOLC Grade",
    y = "Mean % Low Income (block-group mean within grade)"
  ) +
  theme_minimal(base_size = 12)

```

####Plot 2

```{r}
plot_long <- means_by_grade %>%
  select(grade,
         `PM2.5 Percentile` = mean_pm25_percentile,
         `Low Life Expectancy Percentile` = mean_lifeexp_percentile) %>%
  pivot_longer(-grade, names_to = "indicator", values_to = "percentile")

ggplot(plot_long, aes(x = grade, y = percentile)) +
  geom_point(size = 3) +
  geom_line(aes(group = indicator)) +
  facet_wrap(~ indicator, ncol = 1, scales = "free_y") +
  labs(
    title = "Environmental & Health Percentiles by HOLC Grade (LA County)",
    x = "HOLC Grade",
    y = "Mean Percentile (0–100)"
  ) +
  theme_minimal(base_size = 12)

```

#### Write a brief paragraph reflecting on these results


# Part 2: Legacy of redlining in biodiversity observations
#### A figure summarizing the percent of observations within redlined neighborhoods within each HOLC grade
- The percentage of bird observations within each HOLC grade
- Include an appropriate title, axis labels, and legend
```{r}
#making geometries valid
BDobs <- st_make_valid(BDobs)
#aligning CRSs without overwriting
if (st_crs(HOLC) != st_crs(BDobs)) {
  HOLC <- st_transform(HOLC, st_crs(BDobs))
}
#marrying the datasets
Holc_Bdobs <- st_join(BDobs, HOLC["grade"], join = st_intersects)

#finding the amount of visualizations in each red lined area
gradebirds <- Holc_Bdobs |>
  st_drop_geometry() |>
  dplyr::count(grade, name = "Observation Amount") 
view(gradebirds)

#Visualization
ggplot(gradebirds, aes(x = grade, y = `Observation Amount`)) +
  geom_col() +
  scale_y_continuous(labels = comma) +  
  labs(
    title = "Bird Observations by HOLC Grade",
    x = "HOLC Grade",
    y = "Bird Observations (count)"
  ) +
  theme_minimal(base_size = 12)

```
